WITH distinct_facilities AS (
    SELECT DISTINCT ON (fe.facility_entity_id)
        fe.facility_entity_id,
        fe.name AS facility_name,
        fe.contract_office,
        fe.system,
        f.has_pathwell,
        fn.tin
    FROM amp_renewal_facilities rf
    INNER JOIN facility_entities fe ON rf.facility_entity_id = fe.facility_entity_id
    INNER JOIN facilities f ON fe.facility_entity_id = f.facility_entity_id
    INNER JOIN facility_networks fn ON f.prim_prov_id = fn.prim_prov_id AND fn.tin IS NOT NULL
    WHERE rf.renewal_id = :renewal_id
    ORDER BY fe.facility_entity_id
)
SELECT
    r.renewal_id,
    r.name,
    r.owner_first_name,
    r.owner_last_name,
    r.owner_lan_id,
    r.next_negotiation_date,
    r.is_test,
    r.is_active,
    r.created_dt,
    r.update_dt,
    df.system,
    jsonb_agg(DISTINCT jsonb_strip_nulls(
        jsonb_build_object(
            'facility_entity_id', df.facility_entity_id,
            'facility_name', df.facility_name,
            'is_pathwell', df.has_pathwell,
            'tin', df.tin
        )
    )) AS facilities,
    COALESCE(ARRAY_AGG(DISTINCT df.contract_office) FILTER (WHERE df.contract_office IS NOT NULL), '{}') AS contract_office
FROM amp_renewal r
LEFT JOIN distinct_facilities df ON r.renewal_id = :renewal_id
WHERE r.renewal_id = :renewal_id
GROUP BY 
    r.renewal_id,
    r.name,
    r.owner_first_name,
    r.owner_last_name,
    r.owner_lan_id,
    r.next_negotiation_date,
    r.is_test,
    r.is_active,
    r.created_dt,
    r.update_dt,
    df.system;
