SELECT DISTINCT
    ar.renewal_id,
    ar.name AS renewal_name,
    ar.data->'author'->>'first_name' AS author_first_name,
    ar.data->'author'->>'last_name' AS author_last_name,
    ar.next_negotiation_date,
    fe.contract_office,
    fe.system->>'systemid' AS system_id,
    fe.system->>'systemname' AS system_name,
    CASE 
        WHEN EXISTS (
            SELECT 1 
            FROM amp_presentation ap 
            WHERE ap.renewal_id = ar.renewal_id 
            AND ap.is_active = true
            AND ap.status = 'In Progress'
        ) THEN 'In Progress'
        WHEN EXISTS (
            SELECT 1 
            FROM amp_presentation ap 
            WHERE ap.renewal_id = ar.renewal_id 
            AND ap.is_active = true
            AND ap.status = 'Ready'
        ) THEN 'Ready'
        WHEN EXISTS (
            SELECT 1 
            FROM amp_presentation ap 
            WHERE ap.renewal_id = ar.renewal_id 
            AND ap.is_active = true
            AND ap.status = 'Approved'
        ) THEN 'Approved'
        ELSE 'No Active Presentation'
    END AS presentation_status
FROM 
    amp_renewal ar
JOIN 
    amp_renewal_facilities arf ON ar.renewal_id = arf.renewal_id
JOIN 
    facilities_entities fe ON arf.facility_entity_id = fe.facility_entity_id
LEFT JOIN 
    facilities f ON fe.facility_entity_id = f.facility_entity_id
LEFT JOIN 
    amp_presentation ap ON ar.renewal_id = ap.renewal_id AND ap.is_active = true
WHERE 
    1=1
    -- Contract Office filter
    AND (:[contract_office] IS NULL OR fe.contract_office = :[contract_office])
    
    -- System ID filter
    AND (:[system_id] IS NULL OR fe.system->>'systemid' = :[system_id])
    
    -- Renewal owner (author) filter
    AND (
        :[author_name] IS NULL 
        OR CONCAT(ar.data->'author'->>'first_name', ' ', ar.data->'author'->>'last_name') ILIKE '%' || :[author_name] || '%'
    )
    
    -- Next negotiation date range filters
    AND (:[min_negotiation_date] IS NULL OR ar.next_negotiation_date >= :[min_negotiation_date])
    AND (:[max_negotiation_date] IS NULL OR ar.next_negotiation_date <= :[max_negotiation_date])
    
    -- Presentation status filter
    AND (
        :[presentation_status] IS NULL
        OR (
            :[presentation_status] = 'In Progress' 
            AND EXISTS (
                SELECT 1 
                FROM amp_presentation ap_status 
                WHERE ap_status.renewal_id = ar.renewal_id 
                AND ap_status.is_active = true
                AND ap_status.status = 'In Progress'
            )
        )
        OR (
            :[presentation_status] = 'Ready' 
            AND EXISTS (
                SELECT 1 
                FROM amp_presentation ap_status 
                WHERE ap_status.renewal_id = ar.renewal_id 
                AND ap_status.is_active = true
                AND ap_status.status = 'Ready'
            )
        )
        OR (
            :[presentation_status] = 'Approved' 
            AND EXISTS (
                SELECT 1 
                FROM amp_presentation ap_status 
                WHERE ap_status.renewal_id = ar.renewal_id 
                AND ap_status.is_active = true
                AND ap_status.status = 'Approved'
            )
        )
    )

-- Example for your specific use case:
-- For renewals with negotiation date later than today and presentation status "In Progress" or "Ready":
-- WHERE ar.next_negotiation_date > CURRENT_DATE
-- AND (
--     EXISTS (
--         SELECT 1 
--         FROM amp_presentation ap_status 
--         WHERE ap_status.renewal_id = ar.renewal_id 
--         AND ap_status.is_active = true
--         AND ap_status.status = 'In Progress'
--     )
--     OR
--     EXISTS (
--         SELECT 1 
--         FROM amp_presentation ap_status 
--         WHERE ap_status.renewal_id = ar.renewal_id 
--         AND ap_status.is_active = true
--         AND ap_status.status = 'Ready'
--     )
-- )

ORDER BY 
    ar.next_negotiation_date;
