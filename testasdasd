WITH facility_data AS (
  SELECT
    fe.system_id,
    fe.facility_entity_id,
    fe.name,
    fe.system,
    fe.next_negotiation_date::DATE AS next_negotiation_date,
    fe.tf_market_groups
  FROM facility_entity fe
  LEFT JOIN amp_renewal_facilities arf ON fe.facility_entity_id = arf.facility_entity_id
  WHERE arf.renewal_id IS NULL
    AND fe.next_negotiation_date >= CURRENT_DATE
),
aggregated_facilities AS (
  SELECT
    CASE WHEN system_id = '1' THEN facility_entity_id::text ELSE system_id END AS id,
    system_id,
    CASE
      WHEN system_id = '1' THEN name
      ELSE system->>'systemname'
    END AS name,
    system,
    MIN(next_negotiation_date) AS next_negotiation_date
  FROM facility_data
  GROUP BY id, system_id, name, system
),
aggregated_tf_market_groups AS (
  SELECT
    system_id,
    jsonb_agg(DISTINCT grp) AS tf_market_groups
  FROM facility_data,
    jsonb_array_elements(tf_market_groups) AS grp
  WHERE system_id != '1'
  GROUP BY system_id
)

SELECT
  af.id,
  af.system_id,
  af.name,
  af.system,
  af.next_negotiation_date,
  CASE
    WHEN af.system_id = '1' THEN fd.tf_market_groups
    ELSE ag.tf_market_groups
  END AS tf_market_groups,
  COUNT(*) OVER() AS total_count
FROM aggregated_facilities af
LEFT JOIN aggregated_tf_market_groups ag ON af.system_id = ag.system_id
LEFT JOIN facility_data fd ON af.system_id = '1' AND af.id = fd.facility_entity_id::text
ORDER BY af.next_negotiation_date ASC
LIMIT $1 OFFSET $2;
